name: Continuous Integration

on:
  push:
    branches:
    - master

  pull_request:
    branches:
    - master

jobs:
  build:
    env:
      CC: ${{ matrix.c_compiler }}
      CXX: ${{ matrix.cxx_compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-15, windows-11 ]
        compiler: [ gcc-14, llvm-18, llvm, msvc ]
        build_type: [ Debug, RelWithDebInfo ]
        exclude:
          - os: 'windows-11'
            compiler: gcc-14
          - os: 'windows-11'
            compiler: llvm-18
          - os: 'windows-11'
            compiler: llvm
          - os: 'ubuntu-24.04'
            compiler: msvc
          - os: 'ubuntu-24.04'
            compiler: llvm
          - os: 'macos-15'
            compiler: msvc
          - os: 'macos-15'
            compiler: llvm-18
          - os: 'macos-15'
            compiler: gcc

    steps:
      - uses: actions/checkout@v4

      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ./build/
            ~/.conan2
            ${{ env.LOCALAPPDATA }}/.conan2
            ~/.cache/ccache
            ~/.ccache
            ~/.config/ccache
            ~/Library/Caches/ccache
            ${{ env.LOCALAPPDATA }}/ccache
            ${{ env.XDG_CACHE_HOME }}/ccache          
          key: ${{ runner.os }}-conan-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt', '**/conanfile.py') }}
          restore-keys: |
            ${{ runner.os }}-conan-${{ matrix.build_type }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          conan: true
          doxygen: true
          graphviz: true

      - name: Conan install
        run: |
          conan install . -s build_type=${{ matrix.build_type }} \
          -s compiler=${{ matrix.compiler }} \
          -s compiler.cppstd=20 \
          -b missing

      - name: CMake setup
        if: ${{ matrix.build_type == 'Debug' }}
        run: | 
          cmake --preset=dev-conan

      - name: CMake setup
        if: ${{ matrix.build_type == 'RelWithDebInfo' }}
        run: | 
          cmake --preset=dev-conan

      - name: Build
        run:
          cmake --build build/${{ matrix.build_type }} --config ${{ matrix.build_type }}
